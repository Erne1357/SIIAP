"""Agreagación de un atributo y creación de tablas

Revision ID: 220e09fdfab8
Revises: 
Create Date: 2025-09-24 20:56:33.811340

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '220e09fdfab8'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('term',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.Column('start_at', sa.Date(), nullable=False),
    sa.Column('end_at', sa.Date(), nullable=False),
    sa.Column('status', sa.String(length=20), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('document_mapping',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('from_program_id', sa.Integer(), nullable=False),
    sa.Column('to_program_id', sa.Integer(), nullable=False),
    sa.Column('from_archive_id', sa.Integer(), nullable=False),
    sa.Column('to_archive_id', sa.Integer(), nullable=False),
    sa.Column('mapping_rule', sa.String(length=20), nullable=False),
    sa.ForeignKeyConstraint(['from_archive_id'], ['archive.id'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['from_program_id'], ['program.id'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['to_archive_id'], ['archive.id'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['to_program_id'], ['program.id'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('event',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('program_id', sa.Integer(), nullable=True),
    sa.Column('type', sa.String(length=50), nullable=False),
    sa.Column('title', sa.String(length=150), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('location', sa.String(length=200), nullable=True),
    sa.Column('created_by', sa.Integer(), nullable=False),
    sa.Column('visible_to_students', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['created_by'], ['user.id'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['program_id'], ['program.id'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('program_change_request',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('applicant_id', sa.Integer(), nullable=False),
    sa.Column('from_program_id', sa.Integer(), nullable=False),
    sa.Column('to_program_id', sa.Integer(), nullable=False),
    sa.Column('reason', sa.Text(), nullable=True),
    sa.Column('status', sa.String(length=20), nullable=False),
    sa.Column('decided_by', sa.Integer(), nullable=True),
    sa.Column('decided_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['applicant_id'], ['user.id'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['decided_by'], ['user.id'], onupdate='CASCADE', ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['from_program_id'], ['program.id'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['to_program_id'], ['program.id'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('retention_policy',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('archive_id', sa.Integer(), nullable=False),
    sa.Column('keep_years', sa.Integer(), nullable=True),
    sa.Column('keep_forever', sa.Boolean(), nullable=False),
    sa.Column('apply_after', sa.String(length=20), nullable=True),
    sa.ForeignKeyConstraint(['archive_id'], ['archive.id'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('event_window',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('event_id', sa.Integer(), nullable=False),
    sa.Column('date', sa.Date(), nullable=False),
    sa.Column('start_time', sa.Time(), nullable=False),
    sa.Column('end_time', sa.Time(), nullable=False),
    sa.Column('slot_minutes', sa.Integer(), nullable=False),
    sa.Column('timezone', sa.String(length=50), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['event_id'], ['event.id'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('event_slot',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('event_window_id', sa.Integer(), nullable=False),
    sa.Column('starts_at', sa.DateTime(), nullable=False),
    sa.Column('ends_at', sa.DateTime(), nullable=False),
    sa.Column('status', sa.String(length=20), nullable=False),
    sa.Column('held_by', sa.Integer(), nullable=True),
    sa.Column('hold_expires_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['event_window_id'], ['event_window.id'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['held_by'], ['user.id'], onupdate='CASCADE', ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('extension_request',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('submission_id', sa.Integer(), nullable=False),
    sa.Column('requested_by', sa.Integer(), nullable=False),
    sa.Column('role', sa.String(length=20), nullable=False),
    sa.Column('reason', sa.Text(), nullable=True),
    sa.Column('requested_until', sa.DateTime(), nullable=True),
    sa.Column('status', sa.String(length=20), nullable=False),
    sa.Column('granted_until', sa.DateTime(), nullable=True),
    sa.Column('condition_text', sa.Text(), nullable=True),
    sa.Column('decided_by', sa.Integer(), nullable=True),
    sa.Column('decided_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['decided_by'], ['user.id'], onupdate='CASCADE', ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['requested_by'], ['user.id'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['submission_id'], ['submission.id'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('appointment',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('event_id', sa.Integer(), nullable=False),
    sa.Column('slot_id', sa.Integer(), nullable=False),
    sa.Column('applicant_id', sa.Integer(), nullable=False),
    sa.Column('assigned_by', sa.Integer(), nullable=True),
    sa.Column('status', sa.String(length=20), nullable=False),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['applicant_id'], ['user.id'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['assigned_by'], ['user.id'], onupdate='CASCADE', ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['event_id'], ['event.id'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['slot_id'], ['event_slot.id'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('slot_id')
    )
    op.create_table('appointment_change_request',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('appointment_id', sa.Integer(), nullable=False),
    sa.Column('requested_by', sa.Integer(), nullable=False),
    sa.Column('reason', sa.Text(), nullable=True),
    sa.Column('suggestions', sa.Text(), nullable=True),
    sa.Column('status', sa.String(length=20), nullable=False),
    sa.Column('decided_by', sa.Integer(), nullable=True),
    sa.Column('decided_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['appointment_id'], ['appointment.id'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['decided_by'], ['user.id'], onupdate='CASCADE', ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['requested_by'], ['user.id'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('archive', schema=None) as batch_op:
        batch_op.add_column(sa.Column('allow_coordinator_upload', sa.Boolean(), nullable=False,server_default=sa.text('false')))
        batch_op.alter_column('name',
               existing_type=sa.VARCHAR(length=150),
               type_=sa.String(length=100),
               existing_nullable=False)
        batch_op.alter_column('is_downloadable',
               existing_type=sa.BOOLEAN(),
               nullable=True,
               existing_server_default=sa.text('false'))
        batch_op.alter_column('is_uploadable',
               existing_type=sa.BOOLEAN(),
               nullable=True,
               existing_server_default=sa.text('false'))
        batch_op.alter_column('file_path',
               existing_type=sa.TEXT(),
               type_=sa.String(length=200),
               existing_nullable=True)
        batch_op.drop_constraint('fk_archive_step', type_='foreignkey')
        batch_op.create_foreign_key(None, 'step', ['step_id'], ['id'])

    with op.batch_alter_table('log', schema=None) as batch_op:
        batch_op.alter_column('user_id',
               existing_type=sa.INTEGER(),
               nullable=True)
        batch_op.drop_constraint('fk_log_user', type_='foreignkey')
        batch_op.create_foreign_key(None, 'user', ['user_id'], ['id'])

    with op.batch_alter_table('program', schema=None) as batch_op:
        batch_op.drop_constraint('fk_program_user', type_='foreignkey')
        batch_op.create_foreign_key(None, 'user', ['coordinator_id'], ['id'])

    with op.batch_alter_table('program_step', schema=None) as batch_op:
        batch_op.drop_constraint('fk_program_step_program', type_='foreignkey')
        batch_op.drop_constraint('fk_program_step_step', type_='foreignkey')
        batch_op.create_foreign_key(None, 'program', ['program_id'], ['id'])
        batch_op.create_foreign_key(None, 'step', ['step_id'], ['id'])

    with op.batch_alter_table('role', schema=None) as batch_op:
        batch_op.alter_column('description',
               existing_type=sa.TEXT(),
               type_=sa.String(length=200),
               existing_nullable=True)

    with op.batch_alter_table('step', schema=None) as batch_op:
        batch_op.drop_constraint('fk_step_phase', type_='foreignkey')
        batch_op.create_foreign_key(None, 'phase', ['phase_id'], ['id'])

    with op.batch_alter_table('submission', schema=None) as batch_op:
        batch_op.add_column(sa.Column('uploaded_by', sa.Integer(), nullable=True))
        batch_op.add_column(sa.Column('uploaded_by_role', sa.String(length=20), nullable=True))
        batch_op.add_column(sa.Column('deadline_at', sa.DateTime(), nullable=True))
        batch_op.add_column(sa.Column('is_in_extension', sa.Boolean(), nullable=False))
        batch_op.alter_column('file_path',
               existing_type=sa.TEXT(),
               type_=sa.String(length=200),
               existing_nullable=False)
        batch_op.alter_column('upload_date',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True,
               existing_server_default=sa.text('now()'))
        batch_op.drop_constraint('fk_submission_archive', type_='foreignkey')
        batch_op.drop_constraint('fk_submission_program_step', type_='foreignkey')
        batch_op.drop_constraint('fk_submission_reviewer', type_='foreignkey')
        batch_op.drop_constraint('fk_submission_user', type_='foreignkey')
        batch_op.create_foreign_key(None, 'user', ['user_id'], ['id'])
        batch_op.create_foreign_key(None, 'user', ['reviewer_id'], ['id'])
        batch_op.create_foreign_key(None, 'archive', ['archive_id'], ['id'])
        batch_op.create_foreign_key(None, 'user', ['uploaded_by'], ['id'])
        batch_op.create_foreign_key(None, 'program_step', ['program_step_id'], ['id'])

    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.alter_column('is_internal',
               existing_type=sa.BOOLEAN(),
               nullable=True,
               existing_server_default=sa.text('false'))
        batch_op.drop_constraint('fk_user_role', type_='foreignkey')
        batch_op.create_foreign_key(None, 'role', ['role_id'], ['id'])

    with op.batch_alter_table('user_program', schema=None) as batch_op:
        batch_op.alter_column('enrollment_date',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True,
               existing_server_default=sa.text('now()'))
        batch_op.drop_constraint('fk_user_program_user', type_='foreignkey')
        batch_op.drop_constraint('fk_user_program_program', type_='foreignkey')
        batch_op.create_foreign_key(None, 'user', ['user_id'], ['id'])
        batch_op.create_foreign_key(None, 'program', ['program_id'], ['id'])

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('user_program', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key('fk_user_program_program', 'program', ['program_id'], ['id'], onupdate='CASCADE', ondelete='CASCADE')
        batch_op.create_foreign_key('fk_user_program_user', 'user', ['user_id'], ['id'], onupdate='CASCADE', ondelete='CASCADE')
        batch_op.alter_column('enrollment_date',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False,
               existing_server_default=sa.text('now()'))

    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key('fk_user_role', 'role', ['role_id'], ['id'], onupdate='CASCADE', ondelete='CASCADE')
        batch_op.alter_column('is_internal',
               existing_type=sa.BOOLEAN(),
               nullable=False,
               existing_server_default=sa.text('false'))

    with op.batch_alter_table('submission', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key('fk_submission_user', 'user', ['user_id'], ['id'], onupdate='CASCADE', ondelete='CASCADE')
        batch_op.create_foreign_key('fk_submission_reviewer', 'user', ['reviewer_id'], ['id'], onupdate='CASCADE', ondelete='SET NULL')
        batch_op.create_foreign_key('fk_submission_program_step', 'program_step', ['program_step_id'], ['id'], onupdate='CASCADE', ondelete='CASCADE')
        batch_op.create_foreign_key('fk_submission_archive', 'archive', ['archive_id'], ['id'], onupdate='CASCADE', ondelete='CASCADE')
        batch_op.alter_column('upload_date',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False,
               existing_server_default=sa.text('now()'))
        batch_op.alter_column('file_path',
               existing_type=sa.String(length=200),
               type_=sa.TEXT(),
               existing_nullable=False)
        batch_op.drop_column('is_in_extension')
        batch_op.drop_column('deadline_at')
        batch_op.drop_column('uploaded_by_role')
        batch_op.drop_column('uploaded_by')

    with op.batch_alter_table('step', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key('fk_step_phase', 'phase', ['phase_id'], ['id'], onupdate='CASCADE', ondelete='CASCADE')

    with op.batch_alter_table('role', schema=None) as batch_op:
        batch_op.alter_column('description',
               existing_type=sa.String(length=200),
               type_=sa.TEXT(),
               existing_nullable=True)

    with op.batch_alter_table('program_step', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key('fk_program_step_step', 'step', ['step_id'], ['id'], onupdate='CASCADE', ondelete='CASCADE')
        batch_op.create_foreign_key('fk_program_step_program', 'program', ['program_id'], ['id'], onupdate='CASCADE', ondelete='CASCADE')

    with op.batch_alter_table('program', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key('fk_program_user', 'user', ['coordinator_id'], ['id'], onupdate='CASCADE', ondelete='CASCADE')

    with op.batch_alter_table('log', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key('fk_log_user', 'user', ['user_id'], ['id'], onupdate='CASCADE', ondelete='CASCADE')
        batch_op.alter_column('user_id',
               existing_type=sa.INTEGER(),
               nullable=False)

    with op.batch_alter_table('archive', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key('fk_archive_step', 'step', ['step_id'], ['id'], onupdate='CASCADE', ondelete='CASCADE')
        batch_op.alter_column('file_path',
               existing_type=sa.String(length=200),
               type_=sa.TEXT(),
               existing_nullable=True)
        batch_op.alter_column('is_uploadable',
               existing_type=sa.BOOLEAN(),
               nullable=False,
               existing_server_default=sa.text('false'))
        batch_op.alter_column('is_downloadable',
               existing_type=sa.BOOLEAN(),
               nullable=False,
               existing_server_default=sa.text('false'))
        batch_op.alter_column('name',
               existing_type=sa.String(length=100),
               type_=sa.VARCHAR(length=150),
               existing_nullable=False)
        batch_op.drop_column('allow_coordinator_upload')

    op.drop_table('appointment_change_request')
    op.drop_table('appointment')
    op.drop_table('extension_request')
    op.drop_table('event_slot')
    op.drop_table('event_window')
    op.drop_table('retention_policy')
    op.drop_table('program_change_request')
    op.drop_table('event')
    op.drop_table('document_mapping')
    op.drop_table('term')
    # ### end Alembic commands ###
